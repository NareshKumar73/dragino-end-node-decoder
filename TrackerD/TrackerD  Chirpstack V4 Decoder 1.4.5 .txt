function decodeUplink(input) {
        return { 
            data: Decode(input.fPort, input.bytes, input.variables)
        };   
}
function Decode(fPort, bytes, variables) {

	var i;
	var con;
	var str = "";
	var major = 1;
	var minor = 1;
	var rssi = 0;
	var power = 0;
	var device_information1 = 0;
	var device_information2 = 0;
	var device_information3 = 0;
	var addr = "";
	var alarm=0;//Alarm status
	var batV=0;//Battery,units:V
	var bat=0;//Battery,units:V
	var mod = 0;
	var led_updown="";//LED status for position,uplink and downlink
	var Firmware = 0;  // Firmware version; 5 bits   
	var hum=0;//hum,units: °
	var tem=0; //tem,units: °  
	var latitude=0;//gps latitude,units: °  
	var longitude = 0;//gps longitude,units: ° 
	var location=0;
	var time =0;
	var date =0;
  var sub_band;
  var freq_band;
  var sensor; 
  var firm_ver;	
  var sensor_mod;
  var gps_mod;
  var ble_mod;
  var pnackmd;
  var lon;
  var intwk;
	if(fPort == 2 || fPort == 3)
	{

		latitude=(bytes[0]<<24 | bytes[1]<<16 | bytes[2]<<8 | bytes[3])/1000000;//gps latitude,units: °
		longitude=(bytes[4]<<24 | bytes[5]<<16 | bytes[6]<<8 | bytes[7])/1000000;//gps longitude,units: °


		if ((latitude < 190) && (latitude > -190)) {
				if ((longitude < 190) && (longitude > -190)) {
					if ((latitude !== 0) && (longitude !==0)) {
							field: "location",
						  location= "" + latitude + "," + longitude + ""
					
					}        
			   }
			}		
			alarm=(bytes[8] & 0x40)?"TRUE":"FALSE";//Alarm status
			batV=(((bytes[8] & 0x3f) <<8) | bytes[9])/1000;//Battery,units:V
			mod = (bytes[10] >>6)& 0x3f;
			led_updown=(bytes[10] & 0x20)?"ON":"OFF";//LED status for position,uplink and downlink			
			hum=(bytes[11]<<8 | bytes[12])/10;//hum,units: °
			tem=(bytes[13]<<8 | bytes[14])/10; //tem,units: °   

			if(fPort == 2)
			{
			return {
			  Location: location,
			  Latitude: latitude,
			  Longitude: longitude,
			  Hum:hum,
			  Tem:tem,
			  BatV:batV,
			  ALARM_status:alarm,
			  MD:mod,
			  LON:led_updown,
			  };		
			}
			else if(fPort == 3)
			{
  			return {
  			  Location: location,
  			  Latitude: latitude,
  			  Longitude: longitude,
  			  BatV:batV,
  			  ALARM_status:alarm,
  			  MD:mod,
  			  LON:led_updown,
  			  };		
			}			
	}
if(fPort == 0x04)
{
		latitude=(bytes[0]<<24 | bytes[1]<<16 | bytes[2]<<8 | bytes[3])/1000000;//gps latitude,units: °
		longitude=(bytes[4]<<24 | bytes[5]<<16 | bytes[6]<<8 | bytes[7])/1000000;//gps longitude,units: °

		if ((latitude < 190) && (latitude > -190)) {
				if ((longitude < 190) && (longitude > -190)) {
					if ((latitude !== 0) && (longitude !==0)) {
							field: "location",
						  location= "" + latitude + "," + longitude + ""
					
					}        
			   }
			}	
			var year = bytes[8]<<8 | bytes[9];
			var Month =  bytes[10];
			var day =  bytes[11];
			var hour =  bytes[12];
			var min =  bytes[13];
			var sen =  bytes[14];

			date = year+':'+Month+":"+day;
			time1 = hour+":"+min+":"+sen;
			time = date+" "+time1
			return {
			  Latitude: latitude,
			  Longitude: longitude,
			  Time:time,
			  };			
			
}
if(fPort == 0x07)
{
			alarm=(bytes[0] & 0x40)?"TRUE":"FALSE";//Alarm status
			batV=(((bytes[0] & 0x3f) <<8) | bytes[1])/1000;//Battery,units:V
			mod = bytes[2] & 0xC0;
			led_updown=(bytes[2] & 0x20)?"ON":"OFF";//LED status for position,uplink and downlink
			return {
			  BatV:batV,
			  ALARM_status:alarm,
			  MD:mod,
			  LON:led_updown,
			  };				
}
if(fPort==0x05)
  {
    if(bytes[1]==0x00 & bytes[2]==0x00) 
    {
      if(bytes[0]==0x13)
      sensor_mode="TrackerD";
    else
      sensor_mode="NULL";
      if(bytes[6]==0xff)
      sub_band="NULL";
    else
      sub_band=bytes[6];
    
    if(bytes[5]==0x01)
      freq_band="EU868";
    else if(bytes[5]==0x02)
      freq_band="US915";
    else if(bytes[5]==0x03)
      freq_band="IN865";
    else if(bytes[5]==0x04)
      freq_band="AU915";
    else if(bytes[5]==0x05)
      freq_band="KZ865";
    else if(bytes[5]==0x06)
      freq_band="RU864";
    else if(bytes[5]==0x07)
      freq_band="AS923";
    else if(bytes[5]==0x08)
      freq_band="AS923_1";
    else if(bytes[5]==0x09)
      freq_band="AS923_2";
    else if(bytes[5]==0x0A)
      freq_band="AS923_3";
    else if(bytes[5]==0x0B)
      freq_band="CN470";
    else if(bytes[5]==0x0C)
      freq_band="EU433";
    else if(bytes[5]==0x0D)
      freq_band="KR920";
    else if(bytes[5]==0x0E)
      freq_band="MA869";
      
    firm_ver= (bytes[3]&0x0f)+'.'+(bytes[4]>>4&0x0f)+'.'+(bytes[4]&0x0f);
    batV= (bytes[7]<<8 | bytes[8])/1000;
    semsor_mod = (bytes[9]>>6)&0x3f;
    gps_mod = (bytes[9]>>4)&0x03;
    ble_mod = bytes[9]&0x0f;
    pnackmd = (bytes[10]&0x04)?"1":"0";
    lon = ((bytes[10]>>1)&0x01)?"ON":"OFF";
    intwk = bytes[10]&0x01;
    
    if(semsor_mod == 1)
       sensor= "GPS";
    else if(semsor_mod == 2)
       sensor= "BLE"; 
    else if(intwk == 1)
       sensor= "Spots";         
     else if(semsor_mod == 3)
       sensor= "BLE+GPS Hybrid";   
    
    return {
   	BatV:batV,
    SENSOR_MODEL:sensor_mode,
    FIRMWARE_VERSION:firm_ver,
    FREQUENCY_BAND:freq_band,
    SUB_BAND:sub_band, 
    SMODE:sensor,
    GPS_M0D:gps_mod,
    BLE_MD:ble_mod,
    PNACKMD:pnackmd,
    LON:lon,
    Intwk:intwk,
    }
  }
     

  else
   {
     if(bytes[0]==0x13)
      sensor_mode="TrackerD";
    else
      sensor_mode="NULL";
    if(bytes[4]==0xff)
      sub_band="NULL";
    else
      sub_band=bytes[4];
    
    if(bytes[3]==0x01)
      freq_band="EU868";
    else if(bytes[3]==0x02)
      freq_band="US915";
    else if(bytes[3]==0x03)
      freq_band="IN865";
    else if(bytes[3]==0x04)
      freq_band="AU915";
    else if(bytes[3]==0x05)
      freq_band="KZ865";
    else if(bytes[3]==0x06)
      freq_band="RU864";
    else if(bytes[3]==0x07)
      freq_band="AS923";
    else if(bytes[3]==0x08)
      freq_band="AS923_1";
    else if(bytes[3]==0x09)
      freq_band="AS923_2";
    else if(bytes[3]==0x0A)
      freq_band="AS923_3";
    else if(bytes[3]==0x0B)
      freq_band="CN470";
    else if(bytes[3]==0x0C)
      freq_band="EU433";
    else if(bytes[3]==0x0D)
      freq_band="KR920";
    else if(bytes[3]==0x0E)
      freq_band="MA869";
      
    firm_ver= (bytes[1]&0x0f)+'.'+(bytes[2]>>4&0x0f)+'.'+(bytes[2]&0x0f);
    batV= (bytes[5]<<8 | bytes[6])/1000;
    semsor_mod = (bytes[7]>>6)&0x3f;
    gps_mod = (bytes[7]>>4)&0x03;
    ble_mod = bytes[7]&0x0f;
    pnackmd = (bytes[8]&0x04)?"1":"0";
    lon = ((bytes[8]>>1)&0x01)?"ON":"OFF";;
    intwk = bytes[8]&0x01;
    
    if(semsor_mod == 1)
       sensor= "GPS";
    else if(semsor_mod == 2)
       sensor= "BLE"; 
    else if(intwk == 1)
       sensor= "Spots";         
     else if(semsor_mod == 3)
       sensor= "BLE+GPS Hybrid";     
    

   	return {
   	BatV:batV,
    SENSOR_MODEL:sensor_mode,
    FIRMWARE_VERSION:firm_ver,
    FREQUENCY_BAND:freq_band,
    SUB_BAND:sub_band, 
    SMODE:sensor,
    GPS_M0D:gps_mod,
    BLE_MD:ble_mod,
    PNACKMD:pnackmd,
    LON:lon,
    Intwk:intwk,
    }
  }
  }
  
	if(fPort == 6)
	{
		major =  bytes[17];
		
		minor =  bytes[19];
		
		power = bytes[20] << 8 | bytes[21];
		
		rssi =  bytes[23]<<24>>24;

		con = "";
		for(i = 0 ; i < 16 ; i++) {
			if(bytes[i]<0x10)
				con+=0;
		  	con += bytes[i].toString(16);
		  	
		}
		value =  con;
		var uuid = value;	
		alarm=(bytes[24] & 0x40)?"TRUE":"FALSE";//Alarm status
		batV=(((bytes[24] & 0x3f) <<8) | bytes[25])/1000;//Battery,units:V
		mod = (bytes[26] & 0xC0)>>6;

		led_updown=(bytes[26] & 0x20)?"ON":"OFF";//LED status for position,uplink and downlink
		Firmware = 100+(bytes[26] & 0x1f);  // Firmware version; 5 bits 
		if(bytes[26] & 0xC0==0x40) 
		{
			hum=(bytes[27]<<8 | bytes[28])/10;//hum,units: °
			tem=(bytes[29]<<8 | bytes[30])/10; //tem,units: °
		}
		return {
		  BatV:batV,
		  ALARM_status:alarm,
		  MD:mod,
		  LON:led_updown,
		  UUID: uuid,
		  MAJOR: major,
		  MINOR: minor,
		  RSSI:rssi,
		  POWER:power,
		  };			
	}
}
